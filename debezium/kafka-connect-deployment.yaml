---
# Kafka Connect with Debezium Deployment
apiVersion: apps/v1
kind: Deployment
metadata:
  name: kafka-connect-debezium
  labels:
    app: kafka-connect-debezium
spec:
  replicas: 1
  selector:
    matchLabels:
      app: kafka-connect-debezium
  template:
    metadata:
      labels:
        app: kafka-connect-debezium
    spec:
      containers:
      - name: kafka-connect
        image: debezium/connect:2.5
        ports:
        - containerPort: 8083
          name: connect-api
        env:
        - name: BOOTSTRAP_SERVERS
          value: "kafka.default.svc.cluster.local:9092"
        - name: GROUP_ID
          value: "mykart-connect-cluster"
        - name: CONFIG_STORAGE_TOPIC
          value: "mykart-connect-configs"
        - name: OFFSET_STORAGE_TOPIC
          value: "mykart-connect-offsets"
        - name: STATUS_STORAGE_TOPIC
          value: "mykart-connect-status"
        - name: KEY_CONVERTER
          value: "org.apache.kafka.connect.json.JsonConverter"
        - name: VALUE_CONVERTER
          value: "org.apache.kafka.connect.json.JsonConverter"
        - name: CONNECT_KEY_CONVERTER_SCHEMAS_ENABLE
          value: "false"
        - name: CONNECT_VALUE_CONVERTER_SCHEMAS_ENABLE
          value: "false"
        - name: LOG_LEVEL
          value: "INFO"
        resources:
          requests:
            memory: "512Mi"
            cpu: "500m"
          limits:
            memory: "1Gi"
            cpu: "1000m"
        livenessProbe:
          httpGet:
            path: /
            port: 8083
          initialDelaySeconds: 60
          periodSeconds: 30
        readinessProbe:
          httpGet:
            path: /connectors
            port: 8083
          initialDelaySeconds: 30
          periodSeconds: 10

---
# Kafka Connect Service
apiVersion: v1
kind: Service
metadata:
  name: kafka-connect
  labels:
    app: kafka-connect-debezium
spec:
  type: LoadBalancer
  ports:
  - port: 8083
    targetPort: 8083
    protocol: TCP
    name: connect-api
  selector:
    app: kafka-connect-debezium